{
  "name": "biblio-num",
  "version": "1.6.10",
  "description": "Projet Bibliothèque numérique",
  "directories": {
    "doc": "docs"
  },
  "workspaces": [
    "packages/*",
    "apps/*"
  ],
  "scripts": {
    "build": "turbo build",
    "build:client": "turbo build --filter=client",
    "build:rnf-client": "turbo build --filter=rnf-client",
    "build:rnf-server": "turbo build --filter=rnf-server",
    "build:server": "turbo build --filter=server",
    "build:shared": "turbo build --filter=shared",
    "clean:dist": "turbo clean:dist",
    "dev": "turbo dev --filter=client --filter=server",
    "dev:all": "turbo dev",
    "dev:client": "turbo dev --filter=client",
    "dev:rnf": "turbo dev --filter=rnf-client --filter=rnf-server",
    "dev:rnf-client": "turbo dev --filter=rnf-client",
    "dev:rnf-server": "turbo dev --filter=rnf-server",
    "dev:rnf-server-in-docker": "turbo dev:in-docker --filter=rnf-server",
    "dev:server": "turbo dev --filter=server",
    "dev:server-in-docker": "turbo dev:in-docker --filter=server",
    "dev:worker-in-docker": "turbo dev:worker-in-docker --filter=server",
    "docker:adminer": "docker compose --profile adminer -f apps/server/docker-compose.yml up -d",
    "docker:build:client": "docker build -t bn-client:latest --target production -f apps/client/Dockerfile .",
    "docker:build:client:check": "sh ci/scripts/check_http.sh 8080",
    "docker:build:client:run": "docker run -d -p 0.0.0.0:8080:8080 --name bn-client  bn-client:latest",
    "docker:build:client:stop": "docker stop bn-client",
    "docker:build:rnf-client": "docker build -t rnf-client:latest --target production -f apps/rnf-client/Dockerfile .",
    "docker:build:rnf-client:check": "sh ci/scripts/check_http.sh 8081",
    "docker:build:rnf-client:run": "docker run -d -p 0.0.0.0:8081:8080 --name rnf-client  rnf-client:latest",
    "docker:build:rnf-client:stop": "docker stop rnf-client",
    "docker:build:rnf-server": "docker build -t rnf-server:latest --target production -f apps/rnf-server/Dockerfile .",
    "docker:build:rnf-server:check": "sh ci/scripts/check_http.sh 3001 api/health",
    "docker:build:rnf-server:run": "docker run -d -p 0.0.0.0:3001:3001 --name rnf-server --network biblio-num-network --env-file ./docker/.env-rnf rnf-server:latest",
    "docker:build:rnf-server:stop": "docker stop rnf-server",
    "docker:build:server": "docker build -t bn-server:latest --target production -f apps/server/Dockerfile .",
    "docker:build:server:check": "sh ci/scripts/check_http.sh 3000 health",
    "docker:build:server:run": "docker run -d -p 0.0.0.0:3000:3000 --name bn-server --network biblio-num-network --env-file ./docker/.env-bn bn-server:latest",
    "docker:build:server:stop": "docker stop bn-server",
    "docker:db:down": "docker compose --profile db-only -f apps/server/docker-compose.yml down",
    "docker:db:up": "docker compose --profile db-only -f apps/server/docker-compose.yml up -d",
    "docker:dev": "docker compose --profile dev -f apps/server/docker-compose.yml up -d",
    "docker:pgadmin": "docker compose --profile pgadmin -f apps/server/docker-compose.yml up -d",
    "generate-rnf": "turbo generate-code --filter=rnf-server",
    "lint": "turbo lint",
    "lint:client": "turbo lint --filter=client",
    "lint:rnf-client": "turbo lint --filter=rnf-client",
    "lint:rnf-server": "turbo lint --filter=rnf-server",
    "lint:server": "turbo lint --filter=server",
    "prepare": "$CI || husky install",
    "start:rnf-server": "turbo start:prod --no-cache --filter=rnf-server",
    "start:server": "turbo start:prod --no-cache --filter=server",
    "start:worker": "turbo start:worker:prod --no-cache --filter=server",
    "test": "NODE_ENV='test' run-s docker:db:up test:only",
    "test:ci": "NODE_ENV='test' run-s docker:db:up test:only docker:db:down",
    "test:client": "turbo test --filter=client",
    "test:e2e": "NODE_ENV='test' turbo test:e2e --filter=client",
    "test:e2e:ci": "NODE_ENV='test' turbo test:e2e:ci",
    "test:only": "NODE_ENV='test' turbo test",
    "test:rnf-client": "turbo test --filter=rnf-client",
    "test:rnf-server": "turbo test --filter=rnf-server",
    "test:server": "turbo test --filter=server"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dnum-mi/bibliotheque_numerique.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/dnum-mi/bibliotheque_numerique/issues"
  },
  "homepage": "https://github.com/dnum-mi/bibliotheque_numerique#readme",
  "devDependencies": {
    "husky": "8.0.3"
  },
  "dependencies": {
    "npm-run-all": "^4.1.5",
    "turbo": "1.10.16"
  },
  "volta": {
    "node": "18.16.0"
  },
  "pnpm": {
    "overrides": {
      "@cypress/request@<=2.88.12": ">=3.0.0",
      "word-wrap@<1.2.4": ">=1.2.4",
      "graphql@>=16.3.0 <16.8.1": ">=16.8.1",
      "get-func-name@<2.0.1": ">=2.0.1",
      "@babel/traverse@<7.23.2": ">=7.23.2"
    }
  }
}
