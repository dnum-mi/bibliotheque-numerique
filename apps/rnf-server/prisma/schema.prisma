// ======================================== GENERAL ========================================
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ======================================== ENUMS ==========================================
enum FoundationType {
  FDD
  FE
  FRUP
}

enum FoundationRole {
  DECLARANT
  ADMIN
  MANAGER
  MEMBER_BOARD_DIRECTOR
  MEMBER_ADVISORY_COMMITTEE
  FUND_EMPLOYEE
  NOT_SPECIFIED
}

// ======================================== Foundation =====================================
model Foundation {
  id          Int                  @id @default(autoincrement())
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
  rnfId       String               @unique
  type        FoundationType       @default(FDD)
  department  String
  title       String
  dissolvedAt DateTime?
  phone       String
  email       String

  //date de fin d'exercice
  fiscalEndDateAt DateTime?

  // relations
  address     Address              @relation(fields: [addressId], references: [id])
  addressId   Int
  persons     PersonInFoundation[]
  status      FileStorage? @relation("FoundationStatus")
}

model FoundationHistory {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  rnfId         String
  historyNumber Int
  type          FoundationType @default(FDD)
  department    String
  title         String
  dissolvedAt   DateTime?

  //date de fin d'exercice
  fiscalEndDateAt DateTime?

  // Contact
  phone String
  email String

  // Person
  persons Json[] // PersonInFoundation[]
  address Json // Address
  status  Json
}

// ======================================== Address ========================================
model Address {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  label          String
  type           String
  streetAddress  String?
  streetNumber   String?
  streetName     String?
  postalCode     String
  cityName       String
  cityCode       String
  departmentName String?
  departmentCode String
  regionName     String?
  regionCode     String?

  person     Person[]
  foundation Foundation[]
}

// ======================================== Person =========================================
model Person {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  civility    String   @default("")
  lastName    String
  firstName   String
  email       String
  phone       String
  profession  String
  nationality String
  bornAt      DateTime
  bornPlace   String

  address   Address @relation(fields: [addressId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  addressId Int

  foundations PersonInFoundation[]
}

// ======================================== Person IN Foundation ===========================
model PersonInFoundation {
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  foundation   Foundation       @relation(fields: [foundationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  foundationId Int
  person       Person           @relation(fields: [personId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  personId     Int
  roles        FoundationRole[]

  @@id([foundationId, personId])
}

// ======================================== File storage  ===================================
model FileStorage {
  id           Int      @id @default(autoincrement())
  uuid         String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String
  path         String
  originalName String
  checksum     String
  byteSize     Int
  mimeType     String

  foundation      Foundation? @relation("FoundationStatus", fields: [foundationId], references: [id])
  foundationId    Int? @unique
}

// ======================================== Ds Confifuation ================================
model DSConfiguration {
  id                                Int      @id @default(autoincrement())
  createdAt                         DateTime @default(now())
  foundationRefreshedAt             DateTime @default("1970-01-01T00:00:00.000Z")
  updatedAt                         DateTime @updatedAt
  dsDemarcheFDDCreationId           Int      @default(37)
  dsDemarcheFDDCreationAnnotationId String   @default("Q2hhbXAtMTE4")
  dsDemarcheFDDModificationId       Int      @default(50)
  dsDemarcheFDDDissolutionId        Int      @default(51)
  dsDemarcheFECreationId            Int      @default(12)
  dsDemarcheFECreationAnnotationId  String   @default("Q2hhbXAtMzIx")
  dsDemarcheFEModificationId        Int      @default(53)
  dsDemarcheFEDissolutionId         Int      @default(54)
  dsDemarcheDNRId                   Int      @default(43)
  dsDemarcheDNRAnnotationId         String   @default("Q2hhbXAtMTQ3OQ==")
  fieldRegexTitle                   String   @default("#rnf-titre-rnf#")
  fieldRegexType                    String   @default("#rnf-type-rnf#")
  fieldRegexAddress                 String   @default("#rnf-addresse-rnf#")
  fieldRegexEmail                   String   @default("#rnf-courriel-rnf#")
  fieldRegexPhone                   String   @default("#rnf-telephone-rnf#")
  fieldRegexPerson                  String   @default("#rnf-personne-rnf#")
  fieldRegexRnfId                   String   @default("#rnf-numero-rnf-rnf#")
  fieldRegexStatus                  String   @default("#rnf-status-rnf#")
  cronUpdateFrequency               String   @default("0 */5 * * * *")
  fieldRegexPersonQuality           String   @default("#rnf-person-qualite-rnf#")
  fieldRegexPersonCivility          String   @default("#rnf-person-civilite-rnf#")
  fieldRegexPersonFirstName         String   @default("#rnf-person-prenom-rnf#")
  fieldRegexPersonLastName          String   @default("#rnf-person-nom-rnf#")
  fieldRegexPersonBornAt            String   @default("#rnf-person-date-naissance-rnf#")
  fieldRegexPersonBornPlace         String   @default("#rnf-person-lieu-naissance-rnf#")
  fieldRegexPersonNationality       String   @default("#rnf-person-nationalite-rnf#")
  fieldRegexPersonProfession        String   @default("#rnf-person-profession-rnf#")
  fieldRegexPersonAddress           String   @default("#rnf-person-adresse-rnf#")
  fieldRegexPersonPhone             String   @default("#rnf-person-telephone-rnf#")
  fieldRegexAdministator            String   @default("#rnf-administrateur-rnf#")
  fieldRegexFiscalEndDate           String   @default("#rnf-date-fin-exercice-rnf#")
  dsDemarcheFDDAdministrationChangesId Int @default(52)
  dsDemarcheFEAdministrationChangesId  Int @default(55)
}
