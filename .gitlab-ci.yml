include:
  - local: "/ci/includes/node.yml"
  - local: "/ci/includes/rules.yml"
  - local: "/ci/includes/docker.yml"
  - project: $CATALOG_PATH
    file:
      - vault-ci.yml
      - kaniko-ci.yml
    ref: main

default:
  image: node:18
  before_script:
    - export TAG=$(grep -Eo '"version":.*?[^\\]",' package.json | awk -F'"' '{print $4}')

variables:
  DOCKERFILE: Dockerfile
  PROJECT_NAME: bibliotheque-numerique
  PROJECT_ORGANISATION: ministere-interieur
  PROJECT_PATH: ${PROJECT_ORGANISATION}-${PROJECT_NAME}
  REGISTRY_URL: "${QUAY_ROOT_URL}/${PROJECT_PATH}"
  CYPRESS_CACHE_FOLDER: "/tmp"

stages:
  - read-secret
  - test-sonar
  - build-app
  - docker-test
  - docker-build

read_secret:
  stage: read-secret
  extends:
    - .vault:read_secret

test_front:
  variables:
    WORKING_DIR: apps/client
  stage: test-sonar
  allow_failure: true
  extends:
    - .node:sonar

test_rnf_front:
  variables:
    WORKING_DIR: apps/rnf-client
  stage: test-sonar
  allow_failure: true
  extends:
    - .node:sonar

test_back:
  variables:
    WORKING_DIR: apps/server
  stage: test-sonar
  allow_failure: true
  extends:
    - .node:sonar

test_rnf_back:
  variables:
    WORKING_DIR: apps/rnf-server
  stage: test-sonar
  allow_failure: true
  extends:
    - .node:sonar

build_app_front:
  stage: build-app
  artifacts:
    paths:
      - client/dist-*
  script:
    - 'npm i -g pnpm'
    - 'pnpm i --frozen-lockfile'
    - 'pnpm run build:client'

build_app_rnf_front:
  stage: build-app
  artifacts:
    paths:
      - client/dist-*
  script:
    - 'npm i -g pnpm'
    - 'pnpm i --frozen-lockfile'
    - 'pnpm run build:rnf-client'

build_app_back:
  stage: build-app
  artifacts:
    paths:
      - pnpm-lock.yaml
      - apps/server/package.json
      - apps/server/dist
  script:
    - 'npm i -g pnpm'
    - 'pnpm i --frozen-lockfile'
    - 'pnpm run build:server'

build_app_rnf_back:
  stage: build-app
  artifacts:
    paths:
      - pnpm-lock.yaml
      - apps/rnf-server/package.json
      - apps/rnf-server/dist
  script:
    - 'npm i -g pnpm'
    - 'pnpm i --frozen-lockfile'
    - 'pnpm run generate-rnf'
    - 'pnpm run build:rnf-server'

test_docker_front:
  variables:
    WORKING_DIR: 'apps/client'
    IMAGE_NAME: 'bibliotheque_numerique-front'
    DOCKERFILE: 'Dockerfile'
  stage: docker-test
  allow_failure: true
  extends:
    - .docker:test

test_docker_rnf_front:
  variables:
    WORKING_DIR: 'apps/rnf-client'
    IMAGE_NAME: 'rnf-front'
    DOCKERFILE: 'Dockerfile'
  stage: docker-test
  allow_failure: true
  extends:
    - .docker:test

test_docker_back:
  image: docker:stable
  variables:
    WORKING_DIR: 'apps/server'
    IMAGE_NAME: 'bibliotheque_numerique-back'
    DOCKERFILE: 'Dockerfile'
  stage: docker-test
  allow_failure: true
  extends:
    - .docker:test

test_docker_rnf_back:
  image: docker:stable
  variables:
    WORKING_DIR: 'apps/rnf-server'
    IMAGE_NAME: 'rnf-back'
    DOCKERFILE: 'Dockerfile'
  stage: docker-test
  allow_failure: true
  extends:
    - .docker:test

docker_build_front:
  variables:
    WORKING_DIR: 'apps/client'
    IMAGE_NAME: 'bibliotheque_numerique-front'
    DOCKERFILE: 'Dockerfile'
  stage: docker-build
  extends:
    - .kaniko:simple-build-push

docker_build_rnf_front:
  variables:
    WORKING_DIR: 'apps/rnf-client'
    IMAGE_NAME: 'rnf-front'
    DOCKERFILE: 'Dockerfile'
  stage: docker-build
  extends:
    - .kaniko:simple-build-push

docker_build_back:
  variables:
    WORKING_DIR: 'apps/server'
    IMAGE_NAME: 'bibliotheque_numerique-back'
    DOCKERFILE: 'Dockerfile'
  stage: docker-build
  extends:
    - .kaniko:simple-build-push

docker_build_rnf_back:
  variables:
    WORKING_DIR: 'apps/rnf-server'
    IMAGE_NAME: 'rnf-back'
    DOCKERFILE: 'Dockerfile'
  stage: docker-build
  extends:
    - .kaniko:simple-build-push
